{"version":3,"sources":["/./$_lazy_route_resource lazy namespace object","/./src/app/app.component.html","/./src/app/cart/cart.component.html","/./src/app/product-alerts/product-alerts.component.html","/./src/app/product-details/product-details.component.html","/./src/app/product-list/product-list.component.html","/./src/app/shipping/shipping.component.html","/./src/app/top-bar/top-bar.component.html","/./src/app/app.component.css","/./src/app/app.component.ts","/./src/app/app.module.ts","/./src/app/cart.service.ts","/./src/app/cart/cart.component.css","/./src/app/cart/cart.component.ts","/./src/app/comma.pipe.ts","/./src/app/product-alerts/product-alerts.component.css","/./src/app/product-alerts/product-alerts.component.ts","/./src/app/product-details/product-details.component.css","/./src/app/product-details/product-details.component.ts","/./src/app/product-list/product-list.component.css","/./src/app/product-list/product-list.component.ts","/./src/app/products.ts","/./src/app/shipping/shipping.component.css","/./src/app/shipping/shipping.component.ts","/./src/app/top-bar/top-bar.component.css","/./src/app/top-bar/top-bar.component.ts","/./src/environments/environment.ts","/./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","module.exports = \"<app-top-bar></app-top-bar>\\n\\n<div class=\\\"container\\\">\\n  <router-outlet></router-outlet>\\n</div>\"","module.exports = \"<h3>장바구니 목록</h3>\\n\\n<a routerLink=\\\"/shipping\\\">\\n  배송지연안내\\n</a>\\n\\n<div class=\\\"cart-item\\\" *ngFor=\\\"let item of items\\\">\\n  <span>{{ item.name }} </span>\\n  <span>{{ item.price | comma }}</span>\\n</div>\\n\\n<h4>주문하기</h4>\\n<form [formGroup]=\\\"checkoutForm\\\" (ngSubmit)=\\\"onSubmit(checkoutForm.value)\\\">\\n \\n  <div>\\n    <label>Name</label>\\n    <input type=\\\"text\\\" formControlName=\\\"name\\\">\\n  </div>\\n \\n  <div>\\n    <label>Address</label>\\n    <input type=\\\"text\\\" formControlName=\\\"address\\\">\\n  </div>\\n \\n  <button class=\\\"button\\\" type=\\\"submit\\\">Purchase</button>\\n  \\n</form>\"","module.exports = \"<p *ngIf=\\\"product.price > 40000\\\">\\n  <button  (click)=\\\"notify.emit()\\\">알림</button>\\n</p>\\n\"","module.exports = \"<h2>제품 상세페이지</h2>\\n\\n<div *ngIf=\\\"product\\\">\\n  <h3>{{ product.name }}</h3>\\n\\n  <h4>{{ product.price | comma }}</h4>\\n  <p>{{ product.description }}</p>\\n  <button (click)=\\\"addToCart(product)\\\">장바구니 추가</button>\\n</div>\\n\"","module.exports = \"<h2>제품리스트</h2>\\n<div *ngFor=\\\"let product of products; index as productId\\\">\\n  <h3>\\n    <a [title]=\\\"product.name + ' 상세'\\\" [routerLink]=\\\"['/products', productId]\\\">\\n      {{ product.name }}\\n    </a>\\n  </h3>\\n\\n  <p *ngIf=\\\"product.description\\\">\\n    {{ product.description }}\\n  </p>\\n  <button (click)=\\\"share()\\\">\\n    공유하기\\n  </button>\\n\\n  <!-- 자식컴포넌트 집어넣기 -->\\n  <app-product-alerts\\n    [product]=\\\"product\\\"  (notify)=\\\"onNotify()\\\">\\n  </app-product-alerts>\\n</div>\"","module.exports = \"<h3>배송비용 안내</h3>\\n\\n\\n<p>\\n  <a routerLink=\\\"/shipping\\\">배송비용안내</a>\\n</p>\\n<!-- async 파이프를 사용하여 json 배송비용정보를 출력한다. -->\\n<div class=\\\"shipping-item\\\" *ngFor=\\\"let shipping of shippingCosts | async\\\">\\n  <span>{{ shipping.type }} </span>\\n  <span>{{ shipping.price | comma }}</span>\\n</div>\"","module.exports = \"<a routerLink=\\\"/\\\">\\n  <h1>카카오 프렌즈</h1>\\n</a>\\n\\n<a routerLink=\\\"/cart\\\"  class=\\\"button fancy-button\\\">\\n  <i class=\\\"material-icons\\\">shopping_cart</i>\\n  장바구니\\n</a>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'shopping';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppComponent } from './app.component';\nimport { TopBarComponent } from './top-bar/top-bar.component';\nimport { ProductListComponent } from './product-list/product-list.component';\nimport { ProductAlertsComponent } from './product-alerts/product-alerts.component';\nimport { ProductDetailsComponent } from './product-details/product-details.component';\n\nimport { ShippingComponent } from './shipping/shipping.component';\nimport { CommaPipe } from './comma.pipe';\nimport { CartComponent } from './cart/cart.component';\n\n\n@NgModule({\n   declarations: [\n      AppComponent,\n      TopBarComponent,\n      ProductListComponent,\n      ProductAlertsComponent,\n      ProductDetailsComponent,\n      CommaPipe,\n      CartComponent,\n      ShippingComponent,\n   ],\n   imports: [\n      BrowserModule,\n      ReactiveFormsModule,\n      HttpClientModule,\n      RouterModule.forRoot([\n         {path:'', component:ProductListComponent},\n         {path:'products/:productId', component:ProductDetailsComponent},\n         {path:'cart', component:CartComponent},\n         { path: 'shipping', component: ShippingComponent },\n\n   ])\n],\n   providers: [],\n   bootstrap: [\n      AppComponent\n   ]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CartService {\n  \n  //장바구니에 담길 아이템 목록\n  items = [];\n  addToCart(product) {\n    this.items.push(product);\n  }\n\n  getItems() {\n    return this.items;\n  }\n\n  clearCart() {\n    this.items = [];\n    return this.items;\n  }\n\n  //배송비용 정보 가져오기\n  getShippingPrices() {\n    return this.http.get('assets/shipping.json');\n  }\n\n  \nconstructor( private http: HttpClient) { }\n\n\n\n\n\n//장바구니 비우기\n\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NhcnQvY2FydC5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { CartService } from '../cart.service';\nimport { FormBuilder } from '@angular/forms';\n \n@Component({\n  selector: 'app-cart',\n  templateUrl: './cart.component.html',\n  styleUrls: ['./cart.component.css']\n})\nexport class CartComponent implements OnInit {\n //장바구니 목록이 담겨있다.\n  items;\n  checkoutForm;\n  constructor(\n    private cartService: CartService, private formBuilder: FormBuilder,\n  ) {\n    //생성자 호출시 카트서비스 항목중  getItems()메소드를 호출하여 현재 장바구니에 담겨진 목록을\n    //리턴받아서 items에 저장\n    this.items = this.cartService.getItems();\n\n    this.checkoutForm = this.formBuilder.group({\n      name: '',\n      address: ''\n    });\n   }\n \n  ngOnInit() {\n  }\n \n  onSubmit(customerData) {\n    // 주문 로직은 여기에 구현합니다.\n    alert('주문하기가 완료되었습니다.')\n    console.warn('주문이완료되었습니다.', customerData);\n\n    //장바구니를 비운다.\n    this.items = this.cartService.clearCart();\n    //주문하기 폼을 reset한다.\n    this.checkoutForm.reset();\n  }\n\n}","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'comma'\n})\nexport class CommaPipe implements PipeTransform {\n\n  //구현해야할 메소드\n  transform(value: number): string {\n\n    //숫자를 매개변수로 받은 후 세자리단위로 콤마를 찍은 뒤 가장뒤에 '원'을 붙여\n    return value.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")+'원';\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Byb2R1Y3QtYWxlcnRzL3Byb2R1Y3QtYWxlcnRzLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { Input } from '@angular/core';\nimport { Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'app-product-alerts',\n  templateUrl: './product-alerts.component.html',\n  styleUrls: ['./product-alerts.component.css']\n})\nexport class ProductAlertsComponent implements OnInit {\n  //Intput데코레이터 product \n  @Input() product;\n  //Output데코레이터 자식컴포넌트에서 이벤트를 보낼때 사용\n  @Output() notify = new EventEmitter();\n  constructor() { }\n\n  ngOnInit() {\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Byb2R1Y3QtZGV0YWlscy9wcm9kdWN0LWRldGFpbHMuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\nimport { products } from '../products';\r\nimport { CartService } from '../cart.service';\r\n\r\n@Component({\r\n  selector: 'app-product-details',\r\n  templateUrl: './product-details.component.html',\r\n  styleUrls: ['./product-details.component.css']\r\n})\r\nexport class ProductDetailsComponent implements OnInit {\r\n\r\n  product;\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private cartService: CartService,\r\n  ) { }\r\n\r\n\r\n  ngOnInit() {\r\n    //처음 컴포넌트를 실행할 때 초기화해야할 것들을 안쪽에서 수행한다.\r\n    this.route.paramMap.subscribe(params => {\r\n      this.product = products[+params.get('productId')];\r\n    });\r\n  }\r\n\r\n  //장바구니에 상품 담기\r\n  addToCart(product) {\r\n    window.alert('장바구니에 담았습니다.');\r\n    this.cartService.addToCart(product);\r\n  }\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Byb2R1Y3QtbGlzdC9wcm9kdWN0LWxpc3QuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { products } from '../products';\n\n@Component({\n  selector: 'app-product-list',\n  templateUrl: './product-list.component.html',\n  styleUrls: ['./product-list.component.css']\n})\nexport class ProductListComponent implements OnInit {\n  products=products;\n  \n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  //공유하기 기능 \n  share(){\n    alert('공유하였습니다.');\n  }\n  //알림 메세지\n  onNotify() {\n    alert('이제품이 세일을 하면 알려드리겠습니다.');\n  }\n}\n","export const products = [\r\n  {\r\n    name: '라이언',\r\n    price: 40000,\r\n    description: `\r\n    큰 덩치와 무뚝뚝한 표정으로 오해를 많이 사지만, \r\n      사실 누구보다도 여리고 섬세한 소녀감성을 지닌 반전 매력의 소유자! \r\n      원래 아프리카 둥둥섬 왕위 계승자였으나, 자유로운 삶을 동경해 탈출! \r\n      카카오프렌즈의 든든한 조언자 역할을 맡고 있습니다. \r\n      꼬리가 길면 잡히기 때문에, 꼬리가 짧습니다.`\r\n  },\r\n  {\r\n    name: '어피치',\r\n    price: 30000,\r\n    description: `유전자 변이로 자웅동주가 된 것을 알고 \r\n    복숭아 나무에서 탈출한 악동 복숭아 어피치! \r\n    섹시한 뒷태로 사람들을 매혹시키며, \r\n    성격이 매우 급하고 과격합니다.`\r\n  },\r\n  {\r\n    name: '제이지',\r\n    price: 50000,\r\n    description: `땅속 나라 고향에 대한 향수병이 있는 비밀요원 제이지! \r\n    사명의식이 투철하여 냉철해보이고 싶으나, 실은 어리버리합니다. \r\n    겉모습과 달리 알고보면 외로움을 많이 타는 여린 감수성의 소유자. \r\n    힙합 가수 Jay-Z의 열혈팬입니다.`\r\n  }\r\n];\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NoaXBwaW5nL3NoaXBwaW5nLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\n\nimport { CartService } from '../cart.service';\n\n@Component({\n  selector: 'app-shipping',\n  templateUrl: './shipping.component.html',\n  styleUrls: ['./shipping.component.css']\n})\nexport class ShippingComponent {\n  shippingCosts;\n\n  constructor(private cartService: CartService) {\n    this.shippingCosts = this.cartService.getShippingPrices();\n  }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3RvcC1iYXIvdG9wLWJhci5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-top-bar',\n  templateUrl: './top-bar.component.html',\n  styleUrls: ['./top-bar.component.css']\n})\nexport class TopBarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}